<?php
/**
 * Fichier : controller/helper.php ‚Äî bastien59960/reactions/controller/helper.php
 *
 * Service d'aide (Helper) pour la gestion et le rendu des r√©actions.
 *
 * Ce fichier encapsule la logique de r√©cup√©ration des donn√©es de r√©action et
 * la g√©n√©ration du code HTML n√©cessaire pour la mise √† jour AJAX c√¥t√© client.
 *
 * Points cl√©s de la logique m√©tier :
 *   - R√©cup√©ration des r√©actions depuis la base de donn√©es
 *   - V√©rification de l'√©tat des r√©actions de l'utilisateur actuel
 *   - Construction manuelle du HTML pour √©viter les probl√®mes de templates AJAX
 *   - Support complet des emojis Unicode (utf8mb4)
 *   - G√©n√©ration de HTML s√©curis√© (√©chappement XSS)
 *
 * Ce helper est utilis√© par le contr√¥leur AJAX pour retourner le HTML mis √† jour
 * apr√®s ajout ou suppression d'une r√©action, √©vitant ainsi un rechargement de page.
 *
 * POURQUOI UN HELPER ?
 * - Centralise la logique de rendu des r√©actions (√©vite la duplication de code)
 * - S√©pare les responsabilit√©s : le contr√¥leur g√®re la s√©curit√©/validation, 
 *   le helper g√®re le rendu
 * - Facilite les tests unitaires et la maintenance
 * - Permet de r√©utiliser la logique dans d'autres contextes (ex: pre-render serveur)
 *
 * @copyright (c) 2025 Bastien59960
 * @license GNU General Public License, version 2 (GPL-2.0)
 */

namespace bastien59960\reactions\controller;

/**
 * Classe Helper pour la gestion du rendu des r√©actions
 * 
 * G√®re la g√©n√©ration du HTML des blocs de r√©actions pour les r√©ponses AJAX.
 * √âvite l'utilisation du syst√®me de templates phpBB qui est complexe en contexte AJAX.
 */
class helper
{
    // =============================================================================
    // PROPRI√âT√âS DE LA CLASSE
    // =============================================================================
    
    /** @var \phpbb\db\driver\driver_interface Connexion √† la base de donn√©es */
    protected $db;
    
    /** @var \phpbb\user Utilisateur actuel */
    protected $user;
    
    /** @var \phpbb\template\template Moteur de template (non utilis√© mais inject√© pour compatibilit√© future) */
    protected $template;
    
    /** @var \phpbb\language\language Gestionnaire de langues */
    protected $language;

    /** @var string Nom de la table des r√©actions */
    protected $reactions_table;
    
    /** @var string Nom de la table des messages */
    protected $posts_table;

    // =============================================================================
    // CONSTRUCTEUR
    // =============================================================================
    
    /**
     * Constructeur du helper de r√©actions
     * 
     * Initialise les services n√©cessaires pour g√©n√©rer le HTML des r√©actions.
     * Les arguments correspondent exactement √† ceux d√©finis dans config/services.yml.
     * 
     * @param \phpbb\db\driver\driver_interface $db Connexion √† la base de donn√©es
     * @param \phpbb\user $user Utilisateur actuel
     * @param \phpbb\template\template $template Moteur de template phpBB
     * @param \phpbb\language\language $language Gestionnaire de langues
     * @param string $reactions_table Nom de la table des r√©actions (depuis parameters.yml)
     * @param string $posts_table Nom de la table des messages (depuis parameters.yml)
     */
    public function __construct(
        \phpbb\db\driver\driver_interface $db,
        \phpbb\user $user,
        \phpbb\template\template $template,
        \phpbb\language\language $language,
        $reactions_table,
        $posts_table
    ) {
        $this->db              = $db;
        $this->user            = $user;
        $this->template        = $template;
        $this->language        = $language;
        $this->reactions_table = $reactions_table;
        $this->posts_table     = $posts_table;
    }
    
    // =============================================================================
    // M√âTHODE PRINCIPALE DE RENDU
    // =============================================================================
    
    /**
     * G√©n√®re le HTML complet du bloc de r√©actions pour un message donn√©
     * 
     * Cette m√©thode est appel√©e par le contr√¥leur AJAX apr√®s ajout ou suppression
     * d'une r√©action. Elle reconstruit le HTML complet du bloc de r√©actions pour
     * permettre une mise √† jour dynamique c√¥t√© client sans rechargement de page.
     * 
     * POURQUOI CONSTRUIRE LE HTML MANUELLEMENT ?
     * - Le syst√®me de templates phpBB est con√ßu pour le rendu de pages compl√®tes
     * - En contexte AJAX, il est tr√®s difficile de "capturer" le HTML d'un template
     * - La construction manuelle garantit un HTML coh√©rent et performant
     * - √âvite les probl√®mes de cache et de contexte de template
     * 
     * PROCESSUS EN 3 √âTAPES :
     * 1. R√©cup√©ration des r√©actions agr√©g√©es (compteurs par emoji)
     * 2. R√©cup√©ration des r√©actions de l'utilisateur actuel (pour l'√©tat "active")
     * 3. Construction du HTML avec √©chappement de s√©curit√©
     * 
     * @param int $post_id ID du message pour lequel g√©n√©rer le HTML
     * @return string HTML complet du bloc de r√©actions, pr√™t √† injecter c√¥t√© client
     */
    public function get_reactions_html_for_post($post_id)
    {
        // =====================================================================
        // √âTAPE 1 : R√âCUP√âRATION DES R√âACTIONS AGR√âG√âES
        // =====================================================================
        
        // Conversion en entier pour s√©curit√© SQL (√©vite injection)
        $post_id = (int) $post_id;
        
        // Requ√™te SQL pour r√©cup√©rer toutes les r√©actions de ce message
        // GROUP BY : regroupe les r√©actions identiques
        // COUNT : compte combien d'utilisateurs ont utilis√© chaque emoji
        // ORDER BY : trie par popularit√© (emoji le plus utilis√© en premier)
        $sql = 'SELECT reaction_emoji, COUNT(reaction_emoji) as reaction_count
                FROM ' . $this->reactions_table . '
                WHERE post_id = ' . $post_id . '
                GROUP BY reaction_emoji
                ORDER BY reaction_count DESC';
        $result = $this->db->sql_query($sql);
        
        // Construction du tableau de donn√©es
        // Structure : [['reaction_emoji' => 'üëç', 'reaction_count' => 5], ...]
        $reactions_data = [];
        while ($row = $this->db->sql_fetchrow($result))
        {
            $reactions_data[] = $row;
        }
        $this->db->sql_freeresult($result); // Lib√©ration de la m√©moire

        // =====================================================================
        // √âTAPE 2 : V√âRIFICATION DES R√âACTIONS DE L'UTILISATEUR ACTUEL
        // =====================================================================
        
        // Pour afficher visuellement si l'utilisateur a r√©agi (classe CSS "active")
        $user_reacted_emojis = [];
        $user_id = $this->user->data['user_id'];
        
        // V√©rification si l'utilisateur est connect√©
        // ANONYMOUS = constante phpBB pour les utilisateurs non connect√©s
        $is_logged_in = ($user_id != ANONYMOUS);
        
        if ($is_logged_in)
        {
            // R√©cup√©ration de toutes les r√©actions de cet utilisateur sur ce message
            $sql = 'SELECT reaction_emoji
                    FROM ' . $this->reactions_table . '
                    WHERE post_id = ' . $post_id . '
                    AND user_id = ' . $user_id;
            $result = $this->db->sql_query($sql);
            
            // Stockage dans un tableau pour v√©rification rapide avec in_array()
            while ($row = $this->db->sql_fetchrow($result))
            {
                $user_reacted_emojis[] = $row['reaction_emoji'];
            }
            $this->db->sql_freeresult($result);
        }
        
        // =====================================================================
        // √âTAPE 3 : CONSTRUCTION MANUELLE DU HTML
        // =====================================================================
        
        // Conteneur principal des r√©actions
        $html = '<div class="post-reactions">';
        
        // Boucle sur chaque emoji ayant des r√©actions
        foreach ($reactions_data as $reaction)
        {
            // V√©rification si l'utilisateur actuel a utilis√© cet emoji
            $user_reacted = in_array($reaction['reaction_emoji'], $user_reacted_emojis);
            
            // Classe CSS "active" si l'utilisateur a r√©agi (affichage diff√©rent)
            $active_class = $user_reacted ? ' active' : '';
            
            // Masquage si compteur √† z√©ro (ne devrait pas arriver mais s√©curit√©)
            $display_style = ($reaction['reaction_count'] == 0) ? ' style="display:none;"' : '';
            
            // Construction du HTML de la r√©action avec sprintf pour lisibilit√©
            // S√âCURIT√â : htmlspecialchars() pour data-emoji √©vite injection XSS
            // L'emoji brut est affich√© tel quel (d√©j√† encod√© UTF-8 par la DB)
            $html .= sprintf(
                '<span class="reaction%s" data-emoji="%s" data-count="%d"%s>%s <span class="count">%d</span></span>',
                $active_class,                                                    // Classe "active" ou vide
                htmlspecialchars($reaction['reaction_emoji'], ENT_QUOTES, 'UTF-8'), // Emoji √©chapp√© pour attribut HTML
                (int)$reaction['reaction_count'],                                 // Compteur (attribut data)
                $display_style,                                                   // Style inline si cach√©
                $reaction['reaction_emoji'],                                      // Emoji affich√© (contenu visible)
                (int)$reaction['reaction_count']                                  // Compteur affich√©
            );
        }
        
        // =====================================================================
        // AJOUT DU BOUTON "PLUS" (OUVRE LE PICKER D'EMOJIS)
        // =====================================================================
        
        // Le bouton "+" n'est affich√© que pour les utilisateurs connect√©s
        // Il d√©clenche l'ouverture de la palette d'emojis (g√©r√© par reactions.js)
        if ($is_logged_in) {
            $html .= '<span class="reaction-more" title="Ajouter une r√©action">+</span>';
        }
        
        // Fermeture du conteneur
        $html .= '</div>';
        
        // Retour du HTML complet pr√™t √† √™tre inject√© dans la r√©ponse AJAX
        return $html;
    }
}
